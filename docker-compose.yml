services:
  api-gateway:
    build:
      dockerfile: ./api-gateway/Dockerfile
      context: ./
    depends_on:
      db-service:
        condition: service_started
    ports:
      - "8080:8080"
    environment:
      - API_GATEWAY_CONFIG=config/docker.yml
    volumes:
      - ./logs/api-gateway:/app/logs
  db-service:
    build:
      dockerfile: ./db-service/Dockerfile
      context: ./
    depends_on:
      storage:
        condition: service_healthy
      cache:
        condition: service_healthy
    ports:
      - "5050:5050"
    environment:
      - DB_SERVICE_CONFIG=config/docker.yml
    volumes:
      - ./logs/db-service:/app/logs
  storage:
    healthcheck:
      test: pg_isready -U postgres -d postgres
    image: postgres:15.4-alpine
    container_name: storage
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - ./migrations/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    ports:
      - "5432:5432"
  cache:
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
    image: redis:latest
    container_name: cache
    environment:
      REDIS_PASSWORD: redis
    ports:
      - "6379:6379"